# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: Apache-2.0

name: "Pepr Iron Bank Setup"
description: "Pepr Iron Bank Environment Setup"
inputs:
  registry1Username:
    description: 'IRON_BANK_ROBOT_USERNAME'
    required: true
  registry1Password:
    description: 'IRON_BANK_ROBOT_PASSWORD'
    required: true

runs:
  using: "composite"
  steps:
    - name: Use Node.js 22
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version: 22

    - name: Install k3d
      shell: bash
      run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

    - name: Iron Bank Login
      if: ${{ inputs.registry1Username != '' }}
      env:
        REGISTRY_USERNAME: ${{ inputs.registry1Username }}
        REGISTRY_PASSWORD: ${{ inputs.registry1Password }}
      run: echo "${{ env.REGISTRY_PASSWORD }}" | docker login -u "${{ env.REGISTRY_USERNAME }}" --password-stdin registry1.dso.mil
      shell: bash

    - name: Clone Pepr
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: cmwylie19/pepr
        path: pepr

    - name: Set Pepr Environment Variable
      shell: bash
      run: echo "PEPR=${GITHUB_WORKSPACE}/pepr" >> "$GITHUB_ENV"

    # - name: Clone Pepr Excellent Examples
    #   uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    #   with:
    #     repository: defenseunicorns/pepr-excellent-examples
    #     path: pepr-excellent-examples

    # - name: "set env: PEPR_EXCELLENT_EXAMPLES_PATH"
    #   shell: bash
    #   run: echo "PEPR_EXCELLENT_EXAMPLES_PATH=${GITHUB_WORKSPACE}/pepr-excellent-examples" >> "$GITHUB_ENV"

    - name: Clone Iron Bank Repo & Transfer Dockerfiles
      shell: bash
      run: |
        git clone https://repo1.dso.mil/dsop/opensource/defenseunicorns/pepr/controller.git
        cd controller
        mv Dockerfile $PEPR/Dockerfile.ironbank.amd
        mv Dockerfile.arm64 $PEPR/Dockerfile.ironbank.arm
        mv removeVersion.js $PEPR/removeVersion.js

    - name: Install Pepr Dependencies
      shell: bash
      run: |
        cd "$PEPR"
        npm ci

    - name: Build Pepr Iron Bank Images
      shell: bash
      run:  |
        cd "$PEPR"
        ls hack
        ./${PEPR}/hack/build-iron-bank.sh
      # run: |
      #   cd "$PEPR"
      #   PEPR_AMD_TAR="${GITHUB_WORKSPACE}/pepr-amd-img.tar"
      #   PEPR_ARM_TAR="${GITHUB_WORKSPACE}/pepr-arm-img.tar"
      #   echo "PEPR_AMD_TAR=${PEPR_AMD_TAR}" >> "$GITHUB_ENV"
      #   echo "PEPR_ARM_TAR=${PEPR_ARM_TAR}" >> "$GITHUB_ENV"
      #   npm run build
      #   # Copy original package
      #   cp pepr-0.0.0-development.tgz pepr-0.0.0-development.tar.gz
      #   # Decompress the compressed package to rename package to Pepr
      #   tar -zxvf pepr-0.0.0-development.tar.gz && mv package pepr && rm pepr-0.0.0-development.tar.gz
      #   # Create a package-lock.json && hack/build-template-data.json
      #   cd pepr && mkdir hack && ls $PEPR && cp $PEPR/hack/build-template-data.js hack/ && cp $PEPR/build.mjs . && cp $PEPR/tsconfig.json . && npm i && cd ..
      #   # Compress the package back to *.tar.gz
      #   tar -zcvf pepr-0.0.0-development.tar.gz pepr
      #   mv pepr-0.0.0-development.tgz ${GITHUB_WORKSPACE}/pepr-0.0.0-development.tgz
      #   docker build --build-arg PEPR_BUILD_VERSION=0.0.0 -t pepr:amd -f Dockerfile.ironbank.amd .
      #   docker build --build-arg PEPR_BUILD_VERSION=0.0.0 -t pepr:arm -f Dockerfile.ironbank.arm .
      #   docker image save --output "$PEPR_AMD_TAR" pepr:amd
      #   docker image save --output "$PEPR_ARM_TAR" pepr:arm

    - name: upload artifacts
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: pepr-package-and-controller-image
        path: | 
          pepr-0.0.0-development.tgz
          pepr-amd-img.tar
          pepr-arm-img.tar
        if-no-files-found: error
        retention-days: 1
